#!/bin/bash

#For external-service
. /utils.sh


cmd=$1
memberIPs=""
dictionaryFileName="serviceDictionary.csv"

# RUN EVERYTHING AS ROOT
if [ "$(id -u)" != "0" ]; then
    exec sudo "$0" "$@"
fi

function setup_prereqs() {
  echo "No Prerequistes"
}

function getMembers() {
  if [ -z "$CliqrDependencies" ] 
  then
	memberIPs="[\"\"]"
  else
  	for tier in $(echo $CliqrDependencies | tr "," "\n" )
  	do
    		members=CliqrTier_${tier}_PUBLIC_IP
    		for ip in $(echo ${!members} | tr "=" "\n" | tr "," "\n")
    		do
      			memberIPs=$memberIPs"\"$ip\", "
    		done
    		memberIPs=`echo $memberIPs |sed s'/.$//'`
		memberIPs="[$memberIPs]"
  	done
   fi
}

function createParamsJSON() {
paramLine=""
while IFS=',' read -r displayName paramName paramType defValue varVisible optionalParam
do
  if [ "$varVisible" == "Y" ] || [ "$varVisible" == "y" ]
  then
        if [ "$paramType" == "cliqrtier" ]
        then
            paramLine=$paramLine"  \"${paramName}\": ${memberIPs},\n"
        else
            paramLine=$paramLine"  \"${paramName}\": \"${!paramName}\",\n"
        fi
  else
        paramLine=$paramLine"  \"${paramName}\": \"${defValue}\",\n"
  fi
done < "$dictionaryFileName"
paramLine=`echo $paramLine |sed s'/...$//'`

echo -e "{\n$paramLine\n}" >> params.json
}

function executionStatus() {
 FILE="FAILURE"
 if [ -f $FILE ];
 then
    status=`cat $FILE`
    print_log "A10 Configuration Failed"
    print_log "Failed to create Lightning ADC Cluster Object"
    print_log "$status"
    print_log "Feel free to contact A10 Support at cloud-support@a10networks.com with the error message"
    exit 127   
  else
    FILE="SUCCESS"
    status="Successfully Configured Harmony Cluster. The Cluster ID can be used to install the Lightning ADC instances. All instances with same cluster ID will become part of the cluster on connecting to the Harmony Controller."
    print_log "$status"
 fi
}

print_log "Installing pre requisites.."
setup_prereqs
createParamsJSON
case $cmd in
	start)
		print_log "Connecting to Harmony Controller.."
		print_log "Creating Lightning ADC Cluster Object...."
		cluster_id=$(python create-cluster.py 2>&1)
		if [[ $cluster_id == *"Error"* ]];
		then		
			echo $cluster_id >> FAILURE
		else
			
			environment="\"cluster_id\":\"$cluster_id\""
			content="{\"environment\":{$environment}}"
			print_ext_service_result "$content"
			print_log "Cluster object created with Cluster ID: $cluster_id"
		fi
		executionStatus
		;;
	stop)
		print_log "Deleting Service.."
		;;
	update)
		print_log "Updating Service.."
		;;
	*)
		serviceStatus="No Valid Script Argument"
		exit 127
		;;
esac

